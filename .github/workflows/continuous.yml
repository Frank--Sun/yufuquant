name: CI&CD

on: [ push ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v3

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: poetry-cache
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Dependencies
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Lint with mypy
        run: poetry run mypy .

      - name: Lint with flake8
        run: poetry run flake8

      - name: Lint with black
        run: poetry run black . --check

      - name: Test with pytest
        run: poetry run pytest

  cd-dev:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' # Running this job only for dev branch
    steps:
      - uses: actions/checkout@v2

      # Must set up Docker Buildx, otherwise `push` input in docker/build-push-action@v2 won't work.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./compose/production/django/Dockerfile
          push: true
          tags: ghcr.io/yufuquant/yufuquant:latest
          cache-from: type=registry,ref=ghcr.io/yufuquant/yufuquant
          cache-to: type=inline

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo ${{ secrets.CR_PAT }} | docker login -u zmrenwu --password-stdin ghcr.io
            cd ~/apps/yufuquant-dev
            docker-compose pull
            docker-compose up -d
            docker-compose restart nginx